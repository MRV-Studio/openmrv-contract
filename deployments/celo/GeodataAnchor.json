{
  "address": "0x2217DeeC708FaFC50E40D4F4c5954b0E43aD404B",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_id",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "addAnchor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_id",
          "type": "string"
        }
      ],
      "name": "getAnchor",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc8abcc3ab875a754f14c1f017913b5e2581bf2fb0723b6b59953d96bfce487e3",
  "receipt": {
    "to": null,
    "from": "0x2EE935aDFbec9B26540F80D9b98F427C8EA1eaFd",
    "contractAddress": "0x2217DeeC708FaFC50E40D4F4c5954b0E43aD404B",
    "transactionIndex": 4,
    "gasUsed": "669325",
    "logsBloom": "0x
    "blockHash": "0xe972c0f8825829e0d18631c64f30a11eb5090918ae53bd253d9f580c9e6f2318",
    "transactionHash": "0xc8abcc3ab875a754f14c1f017913b5e2581bf2fb0723b6b59953d96bfce487e3",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 15539507,
        "transactionHash": "0xc8abcc3ab875a754f14c1f017913b5e2581bf2fb0723b6b59953d96bfce487e3",
        "address": "0x2217DeeC708FaFC50E40D4F4c5954b0E43aD404B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002ee935adfbec9b26540f80d9b98f427c8ea1eafd"
        ],
        "data": "0x",
        "logIndex": 11,
        "blockHash": "0xe972c0f8825829e0d18631c64f30a11eb5090918ae53bd253d9f580c9e6f2318"
      }
    ],
    "blockNumber": 15539507,
    "cumulativeGasUsed": "1387792",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "720134f5eb14f771d91fc5bb9b2a5306",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"addAnchor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"}],\"name\":\"getAnchor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GeodataAnchor.sol\":\"GeodataAnchor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/GeodataAnchor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract GeodataAnchor is Ownable {\\n\\n    struct Anchor {\\n        bytes32 hash;\\n    }\\n\\n    mapping(string => Anchor) private anchors; // mapping of id to anchor\\n\\n    // get anchor\\n    function getAnchor(string memory _id) public view returns (bytes32) {\\n        Anchor memory anchor = anchors[_id];\\n        if (anchor.hash == 0) {\\n            revert(\\\"Anchor not found\\\");\\n        }\\n\\n        return anchor.hash;\\n    }\\n\\n    // add anchor\\n    function addAnchor(string memory _id, bytes32 _hash) public onlyOwner {\\n        Anchor memory anchor = anchors[_id];\\n        require(anchor.hash == 0, \\\"Anchor id already exists\\\");\\n        require(_hash != 0, \\\"Empty hash\\\");\\n\\n        anchor.hash = _hash;\\n        anchors[_id] = anchor;\\n    }\\n\\n}\",\"keccak256\":\"0x1d2046292d2e176c91d923d53c79c5a793125ed428e54ee18b111e24bd34d9ab\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610aba8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630b5729d41461005c578063715018a61461008c5780638da5cb5b14610096578063af9f815f146100b4578063f2fde38b146100d0575b600080fd5b610076600480360381019061007191906105e6565b6100ec565b6040516100839190610648565b60405180910390f35b61009461017a565b005b61009e61018e565b6040516100ab91906106a4565b60405180910390f35b6100ce60048036038101906100c991906106eb565b6101b7565b005b6100ea60048036038101906100e59190610773565b6102bf565b005b6000806001836040516100ff919061081a565b908152602001604051809103902060405180602001604052908160008201548152505090506000801b81600001510361016d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101649061088e565b60405180910390fd5b8060000151915050919050565b610182610342565b61018c60006103c0565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101bf610342565b60006001836040516101d1919061081a565b908152602001604051809103902060405180602001604052908160008201548152505090506000801b81600001511461023f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610236906108fa565b60405180910390fd5b6000801b8203610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b90610966565b60405180910390fd5b818160000181815250508060018460405161029f919061081a565b908152602001604051809103902060008201518160000155905050505050565b6102c7610342565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d906109f8565b60405180910390fd5b61033f816103c0565b50565b61034a610484565b73ffffffffffffffffffffffffffffffffffffffff1661036861018e565b73ffffffffffffffffffffffffffffffffffffffff16146103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b590610a64565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104f3826104aa565b810181811067ffffffffffffffff82111715610512576105116104bb565b5b80604052505050565b600061052561048c565b905061053182826104ea565b919050565b600067ffffffffffffffff821115610551576105506104bb565b5b61055a826104aa565b9050602081019050919050565b82818337600083830152505050565b600061058961058484610536565b61051b565b9050828152602081018484840111156105a5576105a46104a5565b5b6105b0848285610567565b509392505050565b600082601f8301126105cd576105cc6104a0565b5b81356105dd848260208601610576565b91505092915050565b6000602082840312156105fc576105fb610496565b5b600082013567ffffffffffffffff81111561061a5761061961049b565b5b610626848285016105b8565b91505092915050565b6000819050919050565b6106428161062f565b82525050565b600060208201905061065d6000830184610639565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061068e82610663565b9050919050565b61069e81610683565b82525050565b60006020820190506106b96000830184610695565b92915050565b6106c88161062f565b81146106d357600080fd5b50565b6000813590506106e5816106bf565b92915050565b6000806040838503121561070257610701610496565b5b600083013567ffffffffffffffff8111156107205761071f61049b565b5b61072c858286016105b8565b925050602061073d858286016106d6565b9150509250929050565b61075081610683565b811461075b57600080fd5b50565b60008135905061076d81610747565b92915050565b60006020828403121561078957610788610496565b5b60006107978482850161075e565b91505092915050565b600081519050919050565b600081905092915050565b60005b838110156107d45780820151818401526020810190506107b9565b838111156107e3576000848401525b50505050565b60006107f4826107a0565b6107fe81856107ab565b935061080e8185602086016107b6565b80840191505092915050565b600061082682846107e9565b915081905092915050565b600082825260208201905092915050565b7f416e63686f72206e6f7420666f756e6400000000000000000000000000000000600082015250565b6000610878601083610831565b915061088382610842565b602082019050919050565b600060208201905081810360008301526108a78161086b565b9050919050565b7f416e63686f7220696420616c7265616479206578697374730000000000000000600082015250565b60006108e4601883610831565b91506108ef826108ae565b602082019050919050565b60006020820190508181036000830152610913816108d7565b9050919050565b7f456d707479206861736800000000000000000000000000000000000000000000600082015250565b6000610950600a83610831565b915061095b8261091a565b602082019050919050565b6000602082019050818103600083015261097f81610943565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109e2602683610831565b91506109ed82610986565b604082019050919050565b60006020820190508181036000830152610a11816109d5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a4e602083610831565b9150610a5982610a18565b602082019050919050565b60006020820190508181036000830152610a7d81610a41565b905091905056fea2646970667358221220b4aede24500ac981526f8d645789e619c2a521019eb05bdc5741d9f775aa954064736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80630b5729d41461005c578063715018a61461008c5780638da5cb5b14610096578063af9f815f146100b4578063f2fde38b146100d0575b600080fd5b610076600480360381019061007191906105e6565b6100ec565b6040516100839190610648565b60405180910390f35b61009461017a565b005b61009e61018e565b6040516100ab91906106a4565b60405180910390f35b6100ce60048036038101906100c991906106eb565b6101b7565b005b6100ea60048036038101906100e59190610773565b6102bf565b005b6000806001836040516100ff919061081a565b908152602001604051809103902060405180602001604052908160008201548152505090506000801b81600001510361016d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101649061088e565b60405180910390fd5b8060000151915050919050565b610182610342565b61018c60006103c0565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101bf610342565b60006001836040516101d1919061081a565b908152602001604051809103902060405180602001604052908160008201548152505090506000801b81600001511461023f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610236906108fa565b60405180910390fd5b6000801b8203610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b90610966565b60405180910390fd5b818160000181815250508060018460405161029f919061081a565b908152602001604051809103902060008201518160000155905050505050565b6102c7610342565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d906109f8565b60405180910390fd5b61033f816103c0565b50565b61034a610484565b73ffffffffffffffffffffffffffffffffffffffff1661036861018e565b73ffffffffffffffffffffffffffffffffffffffff16146103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b590610a64565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104f3826104aa565b810181811067ffffffffffffffff82111715610512576105116104bb565b5b80604052505050565b600061052561048c565b905061053182826104ea565b919050565b600067ffffffffffffffff821115610551576105506104bb565b5b61055a826104aa565b9050602081019050919050565b82818337600083830152505050565b600061058961058484610536565b61051b565b9050828152602081018484840111156105a5576105a46104a5565b5b6105b0848285610567565b509392505050565b600082601f8301126105cd576105cc6104a0565b5b81356105dd848260208601610576565b91505092915050565b6000602082840312156105fc576105fb610496565b5b600082013567ffffffffffffffff81111561061a5761061961049b565b5b610626848285016105b8565b91505092915050565b6000819050919050565b6106428161062f565b82525050565b600060208201905061065d6000830184610639565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061068e82610663565b9050919050565b61069e81610683565b82525050565b60006020820190506106b96000830184610695565b92915050565b6106c88161062f565b81146106d357600080fd5b50565b6000813590506106e5816106bf565b92915050565b6000806040838503121561070257610701610496565b5b600083013567ffffffffffffffff8111156107205761071f61049b565b5b61072c858286016105b8565b925050602061073d858286016106d6565b9150509250929050565b61075081610683565b811461075b57600080fd5b50565b60008135905061076d81610747565b92915050565b60006020828403121561078957610788610496565b5b60006107978482850161075e565b91505092915050565b600081519050919050565b600081905092915050565b60005b838110156107d45780820151818401526020810190506107b9565b838111156107e3576000848401525b50505050565b60006107f4826107a0565b6107fe81856107ab565b935061080e8185602086016107b6565b80840191505092915050565b600061082682846107e9565b915081905092915050565b600082825260208201905092915050565b7f416e63686f72206e6f7420666f756e6400000000000000000000000000000000600082015250565b6000610878601083610831565b915061088382610842565b602082019050919050565b600060208201905081810360008301526108a78161086b565b9050919050565b7f416e63686f7220696420616c7265616479206578697374730000000000000000600082015250565b60006108e4601883610831565b91506108ef826108ae565b602082019050919050565b60006020820190508181036000830152610913816108d7565b9050919050565b7f456d707479206861736800000000000000000000000000000000000000000000600082015250565b6000610950600a83610831565b915061095b8261091a565b602082019050919050565b6000602082019050818103600083015261097f81610943565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109e2602683610831565b91506109ed82610986565b604082019050919050565b60006020820190508181036000830152610a11816109d5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a4e602083610831565b9150610a5982610a18565b602082019050919050565b60006020820190508181036000830152610a7d81610a41565b905091905056fea2646970667358221220b4aede24500ac981526f8d645789e619c2a521019eb05bdc5741d9f775aa954064736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/GeodataAnchor.sol:GeodataAnchor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 147,
        "contract": "contracts/GeodataAnchor.sol:GeodataAnchor",
        "label": "anchors",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Anchor)142_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Anchor)142_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct GeodataAnchor.Anchor)",
        "numberOfBytes": "32",
        "value": "t_struct(Anchor)142_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Anchor)142_storage": {
        "encoding": "inplace",
        "label": "struct GeodataAnchor.Anchor",
        "members": [
          {
            "astId": 141,
            "contract": "contracts/GeodataAnchor.sol:GeodataAnchor",
            "label": "hash",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "32"
      }
    }
  }
}