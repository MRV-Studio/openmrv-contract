{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_id",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "addAnchor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_id",
          "type": "string"
        }
      ],
      "name": "getAnchor",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc9cfffb355a87816ff9d69207d0fb1c899152c6638232105c00f9fe7cbaf8eed",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "626127",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000040020000000000000100000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000040000000200000000000000000000000002000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xf6f020e4914c3f6d241cace8c873af5f2046d15f13a329fafea4677515f0691a",
    "transactionHash": "0xc9cfffb355a87816ff9d69207d0fb1c899152c6638232105c00f9fe7cbaf8eed",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xc9cfffb355a87816ff9d69207d0fb1c899152c6638232105c00f9fe7cbaf8eed",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf6f020e4914c3f6d241cace8c873af5f2046d15f13a329fafea4677515f0691a"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "626127",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4263041959a86a7768a38b04a6aa8ce3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"addAnchor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"}],\"name\":\"getAnchor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GeodataAnchor.sol\":\"GeodataAnchor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/GeodataAnchor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract GeodataAnchor is Ownable {\\n\\n    struct Anchor {\\n        bytes32 hash;\\n    }\\n\\n    mapping(string => Anchor) private anchors; // mapping of id to anchor\\n\\n    // get anchor\\n    function getAnchor(string memory _id) public view returns (bytes32) {\\n        Anchor storage anchor = anchors[_id];\\n        if (anchor.hash == 0) {\\n            revert(\\\"Anchor not found\\\");\\n        }\\n\\n        return anchor.hash;\\n    }\\n\\n    // add anchor\\n    function addAnchor(string memory _id, bytes32 _hash) public onlyOwner {\\n        // see if anchor already exists\\n        Anchor storage anchor = anchors[_id];\\n        require(anchor.hash == 0, \\\"Anchor id already exists\\\");\\n\\n        Anchor memory newAnchor = Anchor(_hash);\\n        anchors[_id] = newAnchor;\\n    }\\n\\n}\",\"keccak256\":\"0x01c893eb3c2c38caec759f705f5727e4d43c22ad76f460b4d66b06e1f4a0a88a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6109e98061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630b5729d41461005c578063715018a61461008c5780638da5cb5b14610096578063af9f815f146100b4578063f2fde38b146100d0575b600080fd5b61007660048036038101906100719190610581565b6100ec565b60405161008391906105e3565b60405180910390f35b610094610165565b005b61009e610179565b6040516100ab919061063f565b60405180910390f35b6100ce60048036038101906100c99190610686565b6101a2565b005b6100ea60048036038101906100e5919061070e565b61025a565b005b6000806001836040516100ff91906107b5565b908152602001604051809103902090506000801b816000015403610158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014f90610829565b60405180910390fd5b8060000154915050919050565b61016d6102dd565b610177600061035b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101aa6102dd565b60006001836040516101bc91906107b5565b908152602001604051809103902090506000801b816000015414610215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020c90610895565b60405180910390fd5b600060405180602001604052808481525090508060018560405161023991906107b5565b90815260200160405180910390206000820151816000015590505050505050565b6102626102dd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c890610927565b60405180910390fd5b6102da8161035b565b50565b6102e561041f565b73ffffffffffffffffffffffffffffffffffffffff16610303610179565b73ffffffffffffffffffffffffffffffffffffffff1614610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035090610993565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61048e82610445565b810181811067ffffffffffffffff821117156104ad576104ac610456565b5b80604052505050565b60006104c0610427565b90506104cc8282610485565b919050565b600067ffffffffffffffff8211156104ec576104eb610456565b5b6104f582610445565b9050602081019050919050565b82818337600083830152505050565b600061052461051f846104d1565b6104b6565b9050828152602081018484840111156105405761053f610440565b5b61054b848285610502565b509392505050565b600082601f8301126105685761056761043b565b5b8135610578848260208601610511565b91505092915050565b60006020828403121561059757610596610431565b5b600082013567ffffffffffffffff8111156105b5576105b4610436565b5b6105c184828501610553565b91505092915050565b6000819050919050565b6105dd816105ca565b82525050565b60006020820190506105f860008301846105d4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610629826105fe565b9050919050565b6106398161061e565b82525050565b60006020820190506106546000830184610630565b92915050565b610663816105ca565b811461066e57600080fd5b50565b6000813590506106808161065a565b92915050565b6000806040838503121561069d5761069c610431565b5b600083013567ffffffffffffffff8111156106bb576106ba610436565b5b6106c785828601610553565b92505060206106d885828601610671565b9150509250929050565b6106eb8161061e565b81146106f657600080fd5b50565b600081359050610708816106e2565b92915050565b60006020828403121561072457610723610431565b5b6000610732848285016106f9565b91505092915050565b600081519050919050565b600081905092915050565b60005b8381101561076f578082015181840152602081019050610754565b8381111561077e576000848401525b50505050565b600061078f8261073b565b6107998185610746565b93506107a9818560208601610751565b80840191505092915050565b60006107c18284610784565b915081905092915050565b600082825260208201905092915050565b7f416e63686f72206e6f7420666f756e6400000000000000000000000000000000600082015250565b60006108136010836107cc565b915061081e826107dd565b602082019050919050565b6000602082019050818103600083015261084281610806565b9050919050565b7f416e63686f7220696420616c7265616479206578697374730000000000000000600082015250565b600061087f6018836107cc565b915061088a82610849565b602082019050919050565b600060208201905081810360008301526108ae81610872565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109116026836107cc565b915061091c826108b5565b604082019050919050565b6000602082019050818103600083015261094081610904565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061097d6020836107cc565b915061098882610947565b602082019050919050565b600060208201905081810360008301526109ac81610970565b905091905056fea2646970667358221220712bc7f9d97863f9db2eefc4dba42f585bb051093b5262350431b839f060a13964736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80630b5729d41461005c578063715018a61461008c5780638da5cb5b14610096578063af9f815f146100b4578063f2fde38b146100d0575b600080fd5b61007660048036038101906100719190610581565b6100ec565b60405161008391906105e3565b60405180910390f35b610094610165565b005b61009e610179565b6040516100ab919061063f565b60405180910390f35b6100ce60048036038101906100c99190610686565b6101a2565b005b6100ea60048036038101906100e5919061070e565b61025a565b005b6000806001836040516100ff91906107b5565b908152602001604051809103902090506000801b816000015403610158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014f90610829565b60405180910390fd5b8060000154915050919050565b61016d6102dd565b610177600061035b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101aa6102dd565b60006001836040516101bc91906107b5565b908152602001604051809103902090506000801b816000015414610215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020c90610895565b60405180910390fd5b600060405180602001604052808481525090508060018560405161023991906107b5565b90815260200160405180910390206000820151816000015590505050505050565b6102626102dd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c890610927565b60405180910390fd5b6102da8161035b565b50565b6102e561041f565b73ffffffffffffffffffffffffffffffffffffffff16610303610179565b73ffffffffffffffffffffffffffffffffffffffff1614610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035090610993565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61048e82610445565b810181811067ffffffffffffffff821117156104ad576104ac610456565b5b80604052505050565b60006104c0610427565b90506104cc8282610485565b919050565b600067ffffffffffffffff8211156104ec576104eb610456565b5b6104f582610445565b9050602081019050919050565b82818337600083830152505050565b600061052461051f846104d1565b6104b6565b9050828152602081018484840111156105405761053f610440565b5b61054b848285610502565b509392505050565b600082601f8301126105685761056761043b565b5b8135610578848260208601610511565b91505092915050565b60006020828403121561059757610596610431565b5b600082013567ffffffffffffffff8111156105b5576105b4610436565b5b6105c184828501610553565b91505092915050565b6000819050919050565b6105dd816105ca565b82525050565b60006020820190506105f860008301846105d4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610629826105fe565b9050919050565b6106398161061e565b82525050565b60006020820190506106546000830184610630565b92915050565b610663816105ca565b811461066e57600080fd5b50565b6000813590506106808161065a565b92915050565b6000806040838503121561069d5761069c610431565b5b600083013567ffffffffffffffff8111156106bb576106ba610436565b5b6106c785828601610553565b92505060206106d885828601610671565b9150509250929050565b6106eb8161061e565b81146106f657600080fd5b50565b600081359050610708816106e2565b92915050565b60006020828403121561072457610723610431565b5b6000610732848285016106f9565b91505092915050565b600081519050919050565b600081905092915050565b60005b8381101561076f578082015181840152602081019050610754565b8381111561077e576000848401525b50505050565b600061078f8261073b565b6107998185610746565b93506107a9818560208601610751565b80840191505092915050565b60006107c18284610784565b915081905092915050565b600082825260208201905092915050565b7f416e63686f72206e6f7420666f756e6400000000000000000000000000000000600082015250565b60006108136010836107cc565b915061081e826107dd565b602082019050919050565b6000602082019050818103600083015261084281610806565b9050919050565b7f416e63686f7220696420616c7265616479206578697374730000000000000000600082015250565b600061087f6018836107cc565b915061088a82610849565b602082019050919050565b600060208201905081810360008301526108ae81610872565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109116026836107cc565b915061091c826108b5565b604082019050919050565b6000602082019050818103600083015261094081610904565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061097d6020836107cc565b915061098882610947565b602082019050919050565b600060208201905081810360008301526109ac81610970565b905091905056fea2646970667358221220712bc7f9d97863f9db2eefc4dba42f585bb051093b5262350431b839f060a13964736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/GeodataAnchor.sol:GeodataAnchor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 147,
        "contract": "contracts/GeodataAnchor.sol:GeodataAnchor",
        "label": "anchors",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Anchor)142_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Anchor)142_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct GeodataAnchor.Anchor)",
        "numberOfBytes": "32",
        "value": "t_struct(Anchor)142_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Anchor)142_storage": {
        "encoding": "inplace",
        "label": "struct GeodataAnchor.Anchor",
        "members": [
          {
            "astId": 141,
            "contract": "contracts/GeodataAnchor.sol:GeodataAnchor",
            "label": "hash",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "32"
      }
    }
  }
}